name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

env:
  PYTHON_VERSION: '3.10'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy
      
      - name: Run Ruff linter
        run: |
          ruff check unified-api/app/
          ruff check graphiti/graphiti_core/
      
      - name: Check Black formatting
        run: |
          black --check unified-api/app/
          black --check graphiti/graphiti_core/
      
      - name: Run MyPy type checking
        run: |
          mypy unified-api/app/ --ignore-missing-imports
        continue-on-error: true

  test-unified-api:
    name: Test Unified API
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          cd unified-api
          pip install uv
          uv pip install --system -e ".[dev]"
      
      - name: Run tests
        env:
          REDIS_URL: redis://localhost:6379/0
          NEO4J_URI: bolt://localhost:7687
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd unified-api
          pytest tests/ -v --cov=app --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./unified-api/coverage.xml
          fail_ci_if_error: false

  test-graphiti:
    name: Test Graphiti
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          cd graphiti
          pip install uv
          uv pip install --system -e .
      
      - name: Run unit tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd graphiti
          uv run pytest -m "not integration" -v

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [unified-api, graphiti/server, graphiti/mcp_server]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: false
          tags: test-${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Bandit security linter
        run: |
          pip install bandit
          bandit -r unified-api/app/ -f json -o bandit-report.json
        continue-on-error: true

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check markdown files
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          globs: |
            **/*.md
            !**/node_modules/**
            !**/venv/**
        continue-on-error: true
      
      - name: Check for broken links
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress './**/*.md'
          fail: false