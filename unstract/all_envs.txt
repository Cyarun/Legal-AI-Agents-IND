=== ./docker/.env ===
# Path where public and private tools are registered
# with a YAML and JSONs
TOOL_REGISTRY_CONFIG_SRC_PATH="${PWD}/../unstract/tool-registry/tool_registry_config"

# Celery Autoscaling Configuration
# Specify the maximum and minimum number of concurrent workers for each Celery worker.
# Format: <max_workers>,<min_workers>
# Hint: The max value (max_workers) is related to your CPU resources and the level of concurrency you need.
# Always monitor system performance and adjust the max value as needed.
WORKER_LOGGING_AUTOSCALE=4,1
WORKER_AUTOSCALE=4,1
WORKER_FILE_PROCESSING_AUTOSCALE=4,1
WORKER_FILE_PROCESSING_CALLBACK_AUTOSCALE=4,1
=== ./docker/essentials.env ===
# Refer https://hub.docker.com/_/postgres#:~:text=How%20to%20extend%20this%20image
POSTGRES_USER=unstract_dev
POSTGRES_PASSWORD=unstract_pass
POSTGRES_DB=unstract_db
# Used by db setup script
POSTGRES_SCHEMA=unstract

MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=minio123
MINIO_ACCESS_KEY=minio
MINIO_SECRET_KEY=minio123

# Use encoded password Refer : https://docs.sqlalchemy.org/en/20/core/engines.html#escaping-special-characters-such-as-signs-in-passwords
FLIPT_DB_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"

QDRANT_USER=unstract_vector_dev
QDRANT_PASS=unstract_vector_pass
QDRANT_DB=unstract_vector_db

# RabbitMQ related envs
RABBITMQ_DEFAULT_USER=admin
RABBITMQ_DEFAULT_PASS=password
=== ./docker/sample.env ===
# Path where public and private tools are registered
# with a YAML and JSONs
TOOL_REGISTRY_CONFIG_SRC_PATH="${PWD}/../unstract/tool-registry/tool_registry_config"

# Celery Autoscaling Configuration
# Specify the maximum and minimum number of concurrent workers for each Celery worker.
# Format: <max_workers>,<min_workers>
# Hint: The max value (max_workers) is related to your CPU resources and the level of concurrency you need.
# Always monitor system performance and adjust the max value as needed.
WORKER_LOGGING_AUTOSCALE=4,1
WORKER_AUTOSCALE=4,1
WORKER_FILE_PROCESSING_AUTOSCALE=4,1
WORKER_FILE_PROCESSING_CALLBACK_AUTOSCALE=4,1
=== ./docker/sample.essentials.env ===
# Refer https://hub.docker.com/_/postgres#:~:text=How%20to%20extend%20this%20image
POSTGRES_USER=unstract_dev
POSTGRES_PASSWORD=unstract_pass
POSTGRES_DB=unstract_db
# Used by db setup script
POSTGRES_SCHEMA=unstract

MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=minio123
MINIO_ACCESS_KEY=minio
MINIO_SECRET_KEY=minio123

# Use encoded password Refer : https://docs.sqlalchemy.org/en/20/core/engines.html#escaping-special-characters-such-as-signs-in-passwords
FLIPT_DB_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"

QDRANT_USER=unstract_vector_dev
QDRANT_PASS=unstract_vector_pass
QDRANT_DB=unstract_vector_db

# RabbitMQ related envs
RABBITMQ_DEFAULT_USER=admin
RABBITMQ_DEFAULT_PASS=password
=== ./docker/connector/sample.env ===
MYSQL_ROOT_PASSWORD=unstract_root_pass
MYSQL_DATABASE=unstract_db
MYSQL_USER=unstract_dev
MYSQL_PASSWORD=unstract_pass
ACCEPT_EULA=Y
MSSQL_SA_PASSWORD=unstractPassword@123
SFTP_USER=foo
SFTP_PASS=pass
SFTP_USER_ID=1001
SFTP_DIR=upload
=== ./runner/.env ===
# To pass to tool-sidecar for Kombu's connection
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password

TOOL_CONTAINER_NETWORK="unstract-network"
TOOL_CONTAINER_LABELS="[]"

PRIVATE_REGISTRY_CREDENTIAL_PATH=
PRIVATE_REGISTRY_USERNAME=
PRIVATE_REGISTRY_URL=

# Log level for runner (Options: INFO, WARNING, ERROR, DEBUG, etc.)
LOG_LEVEL="INFO"

# Flag to decide whether to clean up/ remove the tool container after execution.
# (Default: True)
REMOVE_CONTAINER_ON_EXIT=True

# Client module path of the container engine to be used.
CONTAINER_CLIENT_PATH=unstract.runner.clients.docker_client

# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400

# Feature Flags
FLIPT_SERVICE_AVAILABLE=False
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9005
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

# File System Configuration for Workflow and API Execution
# Directory Prefixes for storing execution files
WORKFLOW_EXECUTION_DIR_PREFIX="unstract/execution"
# Storage Provider for Workflow Execution
# Valid options: MINIO, S3, etc..
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

# For unified notification
REDIS_HOST=unstract-redis
REDIS_PORT=6379
REDIS_USER=default
REDIS_PASSWORD=

# Flask related envs
# Can be 'production' or 'development'
FLASK_ENV=production
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5002
FLASK_APP=unstract.runner:app

# Tool Sidecar
TOOL_SIDECAR_ENABLED=False
TOOL_SIDECAR_IMAGE_NAME="unstract/tool-sidecar"
TOOL_SIDECAR_IMAGE_TAG="0.2.0"
TOOL_EXECUTION_CACHE_TTL_IN_SECOND=86400 # 24 Hours

# File Execution Tracker
FILE_EXECUTION_TRACKER_TTL_IN_SECOND=18000 # 5 hours
=== ./runner/sample.env ===
# To pass to tool-sidecar for Kombu's connection
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password

TOOL_CONTAINER_NETWORK="unstract-network"
TOOL_CONTAINER_LABELS="[]"

PRIVATE_REGISTRY_CREDENTIAL_PATH=
PRIVATE_REGISTRY_USERNAME=
PRIVATE_REGISTRY_URL=

# Log level for runner (Options: INFO, WARNING, ERROR, DEBUG, etc.)
LOG_LEVEL="INFO"

# Flag to decide whether to clean up/ remove the tool container after execution.
# (Default: True)
REMOVE_CONTAINER_ON_EXIT=True

# Client module path of the container engine to be used.
CONTAINER_CLIENT_PATH=unstract.runner.clients.docker_client

# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400

# Feature Flags
FLIPT_SERVICE_AVAILABLE=False
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9005
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

# File System Configuration for Workflow and API Execution
# Directory Prefixes for storing execution files
WORKFLOW_EXECUTION_DIR_PREFIX="unstract/execution"
# Storage Provider for Workflow Execution
# Valid options: MINIO, S3, etc..
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

# For unified notification
REDIS_HOST=unstract-redis
REDIS_PORT=6379
REDIS_USER=default
REDIS_PASSWORD=

# Flask related envs
# Can be 'production' or 'development'
FLASK_ENV=production
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5002
FLASK_APP=unstract.runner:app

# Tool Sidecar
TOOL_SIDECAR_ENABLED=False
TOOL_SIDECAR_IMAGE_NAME="unstract/tool-sidecar"
TOOL_SIDECAR_IMAGE_TAG="0.2.0"
TOOL_EXECUTION_CACHE_TTL_IN_SECOND=86400 # 24 Hours

# File Execution Tracker
FILE_EXECUTION_TRACKER_TTL_IN_SECOND=18000 # 5 hours
=== ./tools/classifier/sample.env ===
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001
PLATFORM_SERVICE_API_KEY=<add_platform_key_from_Unstract_frontend>
EXECUTION_DATA_DIR=../data_dir

X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# File System Configuration for Workflow Execution
# Directory path for execution data storage
# (e.g., bucket/execution/org_id/workflow_id/execution_id)
EXECUTION_DATA_DIR=<execution_dir_path_with_bucket>
# Storage provider for Workflow Execution (e.g., minio, S3)
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider":"minio","credentials"={"endpoint_url":"http://localhost:9000","key":"XXX","secret":"XXX"}}'
=== ./tools/structure/sample.env ===
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001
PLATFORM_SERVICE_API_KEY=<add_platform_key_from_Unstract_frontend>
EXECUTION_DATA_DIR=../data_dir
PROMPT_HOST=http://unstract-prompt-service
PROMPT_PORT=3003

X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# File System Configuration for Workflow Execution
# Directory path for execution data storage
# (e.g., bucket/execution/org_id/workflow_id/execution_id)
EXECUTION_DATA_DIR=<execution_dir_path_with_bucket>
# Storage provider for Workflow Execution (e.g., minio, S3)
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider":"minio","credentials"={"endpoint_url":"http://localhost:9000","key":"","secret":""}}'
=== ./tools/text_extractor/sample.env ===
PLATFORM_SERVICE_HOST=
PLATFORM_SERVICE_PORT=
PLATFORM_SERVICE_API_KEY=
EXECUTION_DATA_DIR=
# X2TEXT service
X2TEXT_HOST=
X2TEXT_PORT=

# File System Configuration for Workflow Execution
# Directory path for execution data storage
# (e.g., bucket/execution/org_id/workflow_id/execution_id)
EXECUTION_DATA_DIR=<execution_dir_path_with_bucket>
# Storage provider for Workflow Execution (e.g., minio, S3)
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider":"minio","credentials"={"endpoint_url":"http://localhost:9000","key":"XXX","secret":"XXX"}}'
=== ./frontend/.env ===
REACT_APP_BACKEND_URL=http://localhost:8000

# For development
NODE_ENV=development
# Enable file watching via polling instead of filesystem events
# These are critical for hot reloading to work properly in Docker containers
# as the normal filesystem event notification doesn't work reliably with mounted volumes
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true
# Configure WebSocket port for hot module replacement (HMR)
WDS_SOCKET_PORT=3000
FAST_REFRESH=true
=== ./frontend/sample.env ===
REACT_APP_BACKEND_URL=http://localhost:8000

# For development
NODE_ENV=development
# Enable file watching via polling instead of filesystem events
# These are critical for hot reloading to work properly in Docker containers
# as the normal filesystem event notification doesn't work reliably with mounted volumes
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true
# Configure WebSocket port for hot module replacement (HMR)
WDS_SOCKET_PORT=3000
FAST_REFRESH=true
=== ./platform-service/.env ===
# Flask
FLASK_APP=src/unstract/platform_service/run.py
FLASK_RUN_PORT=3001

# Redis
REDIS_HOST=unstract-redis
REDIS_PORT=6379
REDIS_USERNAME=default
REDIS_PASSWORD=

# Backend DB
PG_BE_HOST=unstract-db
PG_BE_PORT=5432
PG_BE_USERNAME=unstract_dev
PG_BE_PASSWORD=unstract_pass
PG_BE_DATABASE=unstract_db
DB_SCHEMA="unstract"


# Encryption Key
# key must be 32 url-safe base64-encoded bytes.
ENCRYPTION_KEY="2Q5VHJD-FNf8U7fD4QYp1a0X5g8Abc4M6u41NHL_XOA="

# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
# Flipt Service
FLIPT_SERVICE_AVAILABLE=False

# Cost calculation related ENVs
MODEL_PRICES_URL="https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json"
MODEL_PRICES_TTL_IN_DAYS=7
MODEL_PRICES_FILE_PATH="<bucket-name>/cost/model_prices.json"

#Remote storage config
FILE_STORAGE_CREDENTIALS='{"provider":"local"}'
REMOTE_MODEL_PRICES_FILE_PATH="unstract/cost/model_prices.json"

LOG_LEVEL=INFO
=== ./platform-service/sample.env ===
# Flask
FLASK_APP=src/unstract/platform_service/run.py
FLASK_RUN_PORT=3001

# Redis
REDIS_HOST=unstract-redis
REDIS_PORT=6379
REDIS_USERNAME=default
REDIS_PASSWORD=

# Backend DB
PG_BE_HOST=unstract-db
PG_BE_PORT=5432
PG_BE_USERNAME=unstract_dev
PG_BE_PASSWORD=unstract_pass
PG_BE_DATABASE=unstract_db
DB_SCHEMA="unstract"


# Encryption Key
# key must be 32 url-safe base64-encoded bytes.
ENCRYPTION_KEY="Sample-Key"

# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
# Flipt Service
FLIPT_SERVICE_AVAILABLE=False

# Cost calculation related ENVs
MODEL_PRICES_URL="https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json"
MODEL_PRICES_TTL_IN_DAYS=7
MODEL_PRICES_FILE_PATH="<bucket-name>/cost/model_prices.json"

#Remote storage config
FILE_STORAGE_CREDENTIALS='{"provider":"local"}'
REMOTE_MODEL_PRICES_FILE_PATH="unstract/cost/model_prices.json"

LOG_LEVEL=INFO
=== ./x2text-service/.env ===
FLASK_ENV=production
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=3004
API_URL_PREFIX=/api/v1


# Postgres
DB_HOST=unstract-db
DB_PORT=5432
DB_USERNAME=unstract_dev
DB_PASSWORD=unstract_pass
DB_NAME=unstract_db
DB_SCHEMA="unstract"
=== ./x2text-service/sample.env ===
FLASK_ENV=production
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=3004
API_URL_PREFIX=/api/v1


# Postgres
DB_HOST=unstract-db
DB_PORT=5432
DB_USERNAME=unstract_dev
DB_PASSWORD=unstract_pass
DB_NAME=unstract_db
DB_SCHEMA="unstract"
=== ./prompt-service/.env ===
# Backend DB
PG_BE_HOST=unstract-db
PG_BE_PORT=5432
PG_BE_USERNAME=unstract_dev
PG_BE_PASSWORD=unstract_pass
PG_BE_DATABASE=unstract_db
DB_SCHEMA="unstract"

# Redis
REDIS_HOST="unstract-redis"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_USER=default

# Logging
LOG_LEVEL=INFO


###  Env from `unstract-core`  ###
# Celery for PublishLogs
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password
# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400


###  Env from `unstract-flags`  ###
# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
# Flipt Service
FLIPT_SERVICE_AVAILABLE=False


###  Env from `unstract-sdk`  ###
# Platform Service
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001

# X2Text Service
X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# Remote storage related envs
PERMANENT_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
TEMPORARY_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
REMOTE_PROMPT_STUDIO_FILE_PATH="unstract/prompt-studio-data/"

# Timeout for LLMW (v2) extraction
ADAPTER_LLMW_WAIT_TIMEOUT=900  # 15 mins

# Control async extraction of LLMWhisperer (v1)
# Time in seconds to wait before polling LLMWhisperer's status API
ADAPTER_LLMW_POLL_INTERVAL=30
# Total number of times to poll the status API.
# 500 mins to allow 1500 (max pages limit) * 20 (approx time in sec to process a page)
ADAPTER_LLMW_MAX_POLLS=1000
# Number of times to retry the /whisper-status API before failing the extraction
ADAPTER_LLMW_STATUS_RETRIES=5

### Env for Rentroll Service ###
# Rentroll Service
RENTROLL_SERVICE_HOST=http://unstract-rentroll-service
RENTROLL_SERVICE_PORT=5003
=== ./prompt-service/sample.env ===
# Backend DB
PG_BE_HOST=unstract-db
PG_BE_PORT=5432
PG_BE_USERNAME=unstract_dev
PG_BE_PASSWORD=unstract_pass
PG_BE_DATABASE=unstract_db
DB_SCHEMA="unstract"

# Redis
REDIS_HOST="unstract-redis"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_USER=default

# Logging
LOG_LEVEL=INFO


###  Env from `unstract-core`  ###
# Celery for PublishLogs
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password
# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400


###  Env from `unstract-flags`  ###
# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
# Flipt Service
FLIPT_SERVICE_AVAILABLE=False


###  Env from `unstract-sdk`  ###
# Platform Service
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001

# X2Text Service
X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# Remote storage related envs
PERMANENT_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
TEMPORARY_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
REMOTE_PROMPT_STUDIO_FILE_PATH="unstract/prompt-studio-data/"

# Timeout for LLMW (v2) extraction
ADAPTER_LLMW_WAIT_TIMEOUT=900  # 15 mins

# Control async extraction of LLMWhisperer (v1)
# Time in seconds to wait before polling LLMWhisperer's status API
ADAPTER_LLMW_POLL_INTERVAL=30
# Total number of times to poll the status API.
# 500 mins to allow 1500 (max pages limit) * 20 (approx time in sec to process a page)
ADAPTER_LLMW_MAX_POLLS=1000
# Number of times to retry the /whisper-status API before failing the extraction
ADAPTER_LLMW_STATUS_RETRIES=5

### Env for Rentroll Service ###
# Rentroll Service
RENTROLL_SERVICE_HOST=http://unstract-rentroll-service
RENTROLL_SERVICE_PORT=5003
=== ./backend/.env ===
DJANGO_SETTINGS_MODULE='backend.settings.dev'

# NOTE: Change below to True if you are running in HTTPS mode.
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# Default log level
DEFAULT_LOG_LEVEL="INFO"

# Common
PATH_PREFIX="api/v1"

# Django settings
DJANGO_APP_BACKEND_URL=http://docs.cynorsense.com
DJANGO_SECRET_KEY="1(xf&nc6!y7!l&!5xe&i_rx7e^m@fcut9fduv86ft=-b@2g6"

# Postgres DB envs
DB_HOST='unstract-db'
DB_USER='unstract_dev'
DB_PASSWORD='unstract_pass'
DB_NAME='unstract_db'
DB_PORT=5432
DB_SCHEMA="unstract"

# Redis
REDIS_HOST="unstract-redis"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_USER=default

# Connector OAuth
SOCIAL_AUTH_EXTRA_DATA_EXPIRATION_TIME_IN_SECOND=3600
GOOGLE_OAUTH2_KEY=
GOOGLE_OAUTH2_SECRET=

# User session
SESSION_EXPIRATION_TIME_IN_SECOND=7200

# FE Web Application Dependencies
WEB_APP_ORIGIN_URL="http://docs.cynorsense.com"

# API keys for trusted services
INTERNAL_SERVICE_API_KEY=

# Unstract Core envs
BUILTIN_FUNCTIONS_API_KEY=

FREE_STORAGE_AWS_ACCESS_KEY_ID=
FREE_STORAGE_AWS_SECRET_ACCESS_KEY=
UNSTRACT_FREE_STORAGE_BUCKET_NAME=

GDRIVE_GOOGLE_SERVICE_ACCOUNT=
GDRIVE_GOOGLE_PROJECT_ID=
GOOGLE_STORAGE_ACCESS_KEY_ID=
GOOGLE_STORAGE_SECRET_ACCESS_KEY=
GOOGLE_STORAGE_BASE_URL=https://storage.googleapis.com

# Platform Service
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001

# Tool Runner
UNSTRACT_RUNNER_HOST=http://unstract-runner
UNSTRACT_RUNNER_PORT=5002
UNSTRACT_RUNNER_API_TIMEOUT=120  # (in seconds) 2 mins
UNSTRACT_RUNNER_API_RETRY_COUNT=5  # Number of retries for failed requests
UNSTRACT_RUNNER_API_BACKOFF_FACTOR=3  # Exponential backoff factor for retries

# Prompt Service
PROMPT_HOST=http://unstract-prompt-service
PROMPT_PORT=3003

#Prompt Studio
PROMPT_STUDIO_FILE_PATH=/app/prompt-studio-data

# Structure Tool Image (Runs prompt studio exported tools)
# https://hub.docker.com/r/unstract/tool-structure
STRUCTURE_TOOL_IMAGE_URL="docker:unstract/tool-structure:0.0.81"
STRUCTURE_TOOL_IMAGE_NAME="unstract/tool-structure"
STRUCTURE_TOOL_IMAGE_TAG="0.0.81"

# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python


#X2Text Service
X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# Encryption Key
# Key must be 32 url-safe base64-encoded bytes. Check the README.md for details
ENCRYPTION_KEY="2Q5VHJD-FNf8U7fD4QYp1a0X5g8Abc4M6u41NHL_XOA="

# Cache TTL
CACHE_TTL_SEC=10800

# Default user auth credentials
DEFAULT_AUTH_USERNAME="unstract"
DEFAULT_AUTH_PASSWORD="unstract"

# System admin credentials
SYSTEM_ADMIN_USERNAME="admin"
SYSTEM_ADMIN_PASSWORD="admin"
SYSTEM_ADMIN_EMAIL="admin@abc.com"

# Set Django Session Expiry Time (in seconds)
SESSION_COOKIE_AGE=86400

# Control async extraction of LLMWhisperer
# Time in seconds to wait before polling LLMWhisperer's status API
ADAPTER_LLMW_POLL_INTERVAL=30
# Total number of times to poll the status API.
# 500 mins to allow 1500 (max pages limit) * 20 (approx time in sec to process a page)
ADAPTER_LLMW_MAX_POLLS=1000
# Number of times to retry the /whisper-status API before failing the extraction
ADAPTER_LLMW_STATUS_RETRIES=5

# Enable logging of workflow history.
ENABLE_LOG_HISTORY=True
# Interval in seconds for periodic consumer operations.
LOG_HISTORY_CONSUMER_INTERVAL=30
# Maximum number of logs to insert in a single batch.
LOGS_BATCH_LIMIT=30
# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400

# Celery Configuration
# Used by celery and to connect to queue to push logs
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password

# Indexing flag to prevent re-index
INDEXING_FLAG_TTL=1800

# Notification Timeout in Seconds
NOTIFICATION_TIMEOUT=5

# Path where public and private tools are registered
# with a YAML and JSONs
TOOL_REGISTRY_CONFIG_PATH="/data/tool_registry_config"

# Flipt Service
FLIPT_SERVICE_AVAILABLE=False

# File System Configuration for Workflow and API Execution

# Directory Prefixes for storing execution files
WORKFLOW_EXECUTION_DIR_PREFIX="unstract/execution"
API_EXECUTION_DIR_PREFIX="unstract/api"

# Storage Provider for Workflow Execution
# Valid options: MINIO, S3, etc..
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

# Storage Provider for API Execution
API_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

#Remote storage related envs
PERMANENT_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
REMOTE_PROMPT_STUDIO_FILE_PATH="unstract/prompt-studio-data"

# Storage Provider for Tool registry
TOOL_REGISTRY_STORAGE_CREDENTIALS='{"provider":"local"}'

# Highlight data to be available in api deployment
ENABLE_HIGHLIGHT_API_DEPLOYMENT=False

# Execution result and cache expire time
# For API results cached per workflow execution
EXECUTION_RESULT_TTL_SECONDS=86400 # 24 hours
# For execution metadata cached per workflow execution
EXECUTION_CACHE_TTL_SECONDS=86400 # 24 hours
# Instant workflow polling timeout in seconds
INSTANT_WF_POLLING_TIMEOUT=300 # 5 minutes

# Maximum number of batches (i.e., parallel tasks) created for a single workflow execution
MAX_PARALLEL_FILE_BATCHES=1 # 1 file at a time

# File execution tracker ttl in seconds
FILE_EXECUTION_TRACKER_TTL_IN_SECOND=18000 # 5 hours
FILE_EXECUTION_TRACKER_COMPLETED_TTL_IN_SECOND=600 # 10 minutes

# Runner polling timeout
MAX_RUNNER_POLLING_WAIT_SECONDS=10800 # 3 hours
RUNNER_POLLING_INTERVAL_SECONDS=2 # 2 seconds
=== ./backend/sample.test.env ===
DB_HOST='unstract-db'
DB_USER='unstract_dev'
DB_PASSWORD='unstract_pass'
DB_NAME='unstract_db'
DB_PORT=5432


REDSHIFT_HOST=
REDSHIFT_PORT="5439"
REDSHIFT_DB=
REDSHIFT_USER=
REDSHIFT_PASSWORD=

BIGQUERY_CREDS=

SNOWFLAKE_USER=
SNOWFLAKE_PASSWORD=
SNOWFLAKE_ACCOUNT=
SNOWFLAKE_ROLE=
SNOWFLAKE_DB=
SNOWFLAKE_SCHEMA=
SNOWFLAKE_WAREHOUSE=

MSSQL_SERVER=
MSSQL_PORT=
MSSQL_PASSWORD=
MSSQL_DB=
MSSQL_USER=

MYSQL_SERVER=
MYSQL_PORT=
MYSQL_PASSWORD=
MYSQL_DB=
MYSQL_USER=

MARIADB_SERVER=
MARIADB_PORT=
MARIADB_PASSWORD=
MARIADB_DB=
MARIADB_USER=
=== ./backend/sample.env ===
DJANGO_SETTINGS_MODULE='backend.settings.dev'

# NOTE: Change below to True if you are running in HTTPS mode.
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# Default log level
DEFAULT_LOG_LEVEL="INFO"

# Common
PATH_PREFIX="api/v1"

# Django settings
DJANGO_APP_BACKEND_URL=http://frontend.unstract.localhost
DJANGO_SECRET_KEY="1(xf&nc6!y7!l&!5xe&i_rx7e^m@fcut9fduv86ft=-b@2g6"

# Postgres DB envs
DB_HOST='unstract-db'
DB_USER='unstract_dev'
DB_PASSWORD='unstract_pass'
DB_NAME='unstract_db'
DB_PORT=5432
DB_SCHEMA="unstract"

# Redis
REDIS_HOST="unstract-redis"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_USER=default

# Connector OAuth
SOCIAL_AUTH_EXTRA_DATA_EXPIRATION_TIME_IN_SECOND=3600
GOOGLE_OAUTH2_KEY=
GOOGLE_OAUTH2_SECRET=

# User session
SESSION_EXPIRATION_TIME_IN_SECOND=7200

# FE Web Application Dependencies
WEB_APP_ORIGIN_URL="http://frontend.unstract.localhost"

# API keys for trusted services
INTERNAL_SERVICE_API_KEY=

# Unstract Core envs
BUILTIN_FUNCTIONS_API_KEY=

FREE_STORAGE_AWS_ACCESS_KEY_ID=
FREE_STORAGE_AWS_SECRET_ACCESS_KEY=
UNSTRACT_FREE_STORAGE_BUCKET_NAME=

GDRIVE_GOOGLE_SERVICE_ACCOUNT=
GDRIVE_GOOGLE_PROJECT_ID=
GOOGLE_STORAGE_ACCESS_KEY_ID=
GOOGLE_STORAGE_SECRET_ACCESS_KEY=
GOOGLE_STORAGE_BASE_URL=https://storage.googleapis.com

# Platform Service
PLATFORM_SERVICE_HOST=http://unstract-platform-service
PLATFORM_SERVICE_PORT=3001

# Tool Runner
UNSTRACT_RUNNER_HOST=http://unstract-runner
UNSTRACT_RUNNER_PORT=5002
UNSTRACT_RUNNER_API_TIMEOUT=120  # (in seconds) 2 mins
UNSTRACT_RUNNER_API_RETRY_COUNT=5  # Number of retries for failed requests
UNSTRACT_RUNNER_API_BACKOFF_FACTOR=3  # Exponential backoff factor for retries

# Prompt Service
PROMPT_HOST=http://unstract-prompt-service
PROMPT_PORT=3003

#Prompt Studio
PROMPT_STUDIO_FILE_PATH=/app/prompt-studio-data

# Structure Tool Image (Runs prompt studio exported tools)
# https://hub.docker.com/r/unstract/tool-structure
STRUCTURE_TOOL_IMAGE_URL="docker:unstract/tool-structure:0.0.81"
STRUCTURE_TOOL_IMAGE_NAME="unstract/tool-structure"
STRUCTURE_TOOL_IMAGE_TAG="0.0.81"

# Feature Flags
EVALUATION_SERVER_IP=unstract-flipt
EVALUATION_SERVER_PORT=9000
PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python


#X2Text Service
X2TEXT_HOST=http://unstract-x2text-service
X2TEXT_PORT=3004

# Encryption Key
# Key must be 32 url-safe base64-encoded bytes. Check the README.md for details
ENCRYPTION_KEY="Sample-Key"

# Cache TTL
CACHE_TTL_SEC=10800

# Default user auth credentials
DEFAULT_AUTH_USERNAME=
DEFAULT_AUTH_PASSWORD=

# System admin credentials
SYSTEM_ADMIN_USERNAME="admin"
SYSTEM_ADMIN_PASSWORD="admin"
SYSTEM_ADMIN_EMAIL="admin@abc.com"

# Set Django Session Expiry Time (in seconds)
SESSION_COOKIE_AGE=86400

# Control async extraction of LLMWhisperer
# Time in seconds to wait before polling LLMWhisperer's status API
ADAPTER_LLMW_POLL_INTERVAL=30
# Total number of times to poll the status API.
# 500 mins to allow 1500 (max pages limit) * 20 (approx time in sec to process a page)
ADAPTER_LLMW_MAX_POLLS=1000
# Number of times to retry the /whisper-status API before failing the extraction
ADAPTER_LLMW_STATUS_RETRIES=5

# Enable logging of workflow history.
ENABLE_LOG_HISTORY=True
# Interval in seconds for periodic consumer operations.
LOG_HISTORY_CONSUMER_INTERVAL=30
# Maximum number of logs to insert in a single batch.
LOGS_BATCH_LIMIT=30
# Logs Expiry of 24 hours
LOGS_EXPIRATION_TIME_IN_SECOND=86400

# Celery Configuration
# Used by celery and to connect to queue to push logs
CELERY_BROKER_BASE_URL="amqp://unstract-rabbitmq:5672//"
CELERY_BROKER_USER=admin
CELERY_BROKER_PASS=password

# Indexing flag to prevent re-index
INDEXING_FLAG_TTL=1800

# Notification Timeout in Seconds
NOTIFICATION_TIMEOUT=5

# Path where public and private tools are registered
# with a YAML and JSONs
TOOL_REGISTRY_CONFIG_PATH="/data/tool_registry_config"

# Flipt Service
FLIPT_SERVICE_AVAILABLE=False

# File System Configuration for Workflow and API Execution

# Directory Prefixes for storing execution files
WORKFLOW_EXECUTION_DIR_PREFIX="unstract/execution"
API_EXECUTION_DIR_PREFIX="unstract/api"

# Storage Provider for Workflow Execution
# Valid options: MINIO, S3, etc..
WORKFLOW_EXECUTION_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

# Storage Provider for API Execution
API_FILE_STORAGE_CREDENTIALS='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'

#Remote storage related envs
PERMANENT_REMOTE_STORAGE='{"provider": "minio", "credentials": {"endpoint_url": "http://unstract-minio:9000", "key": "minio", "secret": "minio123"}}'
REMOTE_PROMPT_STUDIO_FILE_PATH="unstract/prompt-studio-data"

# Storage Provider for Tool registry
TOOL_REGISTRY_STORAGE_CREDENTIALS='{"provider":"local"}'

# Highlight data to be available in api deployment
ENABLE_HIGHLIGHT_API_DEPLOYMENT=False

# Execution result and cache expire time
# For API results cached per workflow execution
EXECUTION_RESULT_TTL_SECONDS=86400 # 24 hours
# For execution metadata cached per workflow execution
EXECUTION_CACHE_TTL_SECONDS=86400 # 24 hours
# Instant workflow polling timeout in seconds
INSTANT_WF_POLLING_TIMEOUT=300 # 5 minutes

# Maximum number of batches (i.e., parallel tasks) created for a single workflow execution
MAX_PARALLEL_FILE_BATCHES=1 # 1 file at a time

# File execution tracker ttl in seconds
FILE_EXECUTION_TRACKER_TTL_IN_SECOND=18000 # 5 hours
FILE_EXECUTION_TRACKER_COMPLETED_TTL_IN_SECOND=600 # 10 minutes

# Runner polling timeout
MAX_RUNNER_POLLING_WAIT_SECONDS=10800 # 3 hours
RUNNER_POLLING_INTERVAL_SECONDS=2 # 2 seconds
=== ./unstract/flags/src/unstract/flags/sample.env ===
FEATURE_FLAG_SERVICE_HOST=0.0.0.0
flipt_server_port=9000
FLIPT_SERVICE_AVAILABLE=False
=== ./unstract/tool-registry/sample.env ===
# Path where public and private tools are registered
# with a YAML and JSONs
TOOL_REGISTRY_CONFIG_PATH="${PWD}/tool_registry_config"
